@using CSI.IBTA.Shared.Entities
@model List<Employer>

<div id="table-employer" class="container">
    <div class="row">
        <div class="col-sm-8">
        </div>
        <div class="col-sm-4">
            <button class="btn btn-primary">Add New Employer</button>
        </div>
    </div>

    <span class="border-label" style="text-align:left">Search Criteria</span>
    <div class="row form-columns">
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    <label for="NameFilter">Employer Name:</label>
                    <input type="text" name="NameFilter" value="@ViewData["CurrentNameFilter"]" />
                    <label for="CodeFilter">Employer Code:</label>
                    <input type="text" name="CodeFilter" value="@ViewData["CurrentCodeFilter"]" />
                    <input type="submit" value="Search" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-primary">Back to Full List</a>
                </p>
            </div>
        </form>
    </div>
    <br />
    <div class="row">
        <div class="table-data">
            <table class="table table-striped" id="employer-table">
                <thead>
                    <tr>
                        <th>Employer Name</th>
                        <th>Employer Code</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a onclick="showEmployerDetails(@item.Id)"> @Html.DisplayFor(modelItem => item.Name) </a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div style="text-align:right" class="pages">
                <button class="btn btn-primary btn-small">Prev</button>
                <span>0</span>
                <button class="btn btn-primary btn-small">Next</button>
            </div>

        </div>
    </div>
</div>
<div id="control-employer" style="display: none;" />

<script type="text/javascript">
    function showEmployerDetails(employerId) {
        function onSuccess(data) {
            document.getElementById('control-employer').innerHTML = data;
            $("#table-employer").hide();
            $("#control-employer").show();
        }

        fetchRoute('/Employer?employerId=' + employerId, onSuccess, null);
    }

    function showEmployerSettings(employerId) {
        fetch('/Employer/AllSettings?employerId=' + employerId)
            .then(function (response) {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(function (data) {
                document.getElementById('employer-partial-action').innerHTML = data;
            })
            .catch(function (error) {
                console.error('There was a problem with the fetch operation:', error);
            });
    }

    function createInsurancePackage(employerId) {
        fetch('/InsurancePackage?employerId=' + employerId)
            .then(function (response) {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(function (data) {
                document.getElementById('employer-partial-action').innerHTML = data;
            })
            .catch(function (error) {
                console.error('There was a problem with the fetch operation:', error);
            });
    function showInsurancePlan(employerId, planId) {
        function onSuccess(data) {
            document.getElementById('employer-partial-action').innerHTML = data;
        }
        function onFailure(error) {
            console.error('There was a problem with the fetch operation:', error);
        }
        route = '/Benefits/UpdatePlan?employerId=' + employerId + '&planId=' + planId;
        route = '/Benefits/CreatePlan?employerId=' + employerId;
        fetchRoute(route, onSuccess, null);
    }
</script>

<script type="text/javascript" src="~/Scripts/employer-user.js"></script>
<script type="text/javascript" src="~/Scripts/insurance-packages.js"></script>
<script type="text/javascript" src="~/Scripts/benefits.js"></script>
