@using CSI.IBTA.Customer.Constants
@    using CSI.IBTA.Employer.Constants
@    using CSI.IBTA.Shared.Utils.Extensions
@    using CSI.IBTA.Shared.DataStructures
@    using CSI.IBTA.Shared.DTOs
@    using CSI.IBTA.Shared.Entities
@    using CSI.IBTA.Shared.Extensions

@{
    var nextDisabled = Model.Page >= Model.TotalPages ? "disabled" : "";
    var prevDisabled = Model.Page <= 1 ? "disabled" : "";
}

<head>
    <link rel="stylesheet" href="~/css/employees-partial-view.css">
</head>

<div class="employee-container">
    <span class="border-label-employees">Search Employees</span>

    @if (Model.Employees.Any())
    {
        <div class="employees-table">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Election</th>
                        <th>Contribution</th>
                        <th>Total Balance</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Employees)
                    {
                        <tr>
                            <td>
                                @* <a href="#">@Html.DisplayFor(modelItem => item.Firstname)</a> *@
                                General Medical Insurance
                            </td>
                            <td>
                                @* @Html.DisplayFor(modelItem => item.Lastname) *@
                                Medical
                            </td>
                            <td>
                                @* @Html.DisplayFor(modelItem => item.SSN) *@
                                100$
                            </td>
                            <td>
                                2000$
                            </td>
                            <td>
                                6548$
                            </td>
                            <td>
                                <button class="anchor-style-button" onclick="showEnrollments(@Model.EmployerId, @item.Id)">File a Claim</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="pages">
                <a onclick="getEmployeesPage(@Model.EmployerId, @(Model.Page - 1))"
                   class="btn btn-default @prevDisabled">
                    &lt;&lt; Prev
                </a>
                @{
                    var nextPages = Math.Max(PaginationConstants.PagesToShow, Model.Page + PaginationConstants.NextPages);
                    var lastPage = Math.Min(nextPages, Model.TotalPages);
                    var firstPage = Math.Max(1, lastPage - (PaginationConstants.NextPages + PaginationConstants.PrevPages));
                    for (int i = firstPage; i <= lastPage; i++)
                    {
                        if (i == Model.Page || Model.Page == 0)
                        {
                            <span class="page-button selected">@Model.Page</span>
                        }
                        else
                        {
                            <a onclick="getEmployeesPage(@Model.EmployerId, @(i))"
                               class="btn btn-default page-button">
                                @i
                            </a>
                        }
                    }
                }
                <a onclick="getEmployeesPage(@Model.EmployerId, @(Model.Page + 1))"
                   class="btn btn-default @nextDisabled">
                    Next >>
                </a>
            </div>
        </div>
    }
    else
    {
        <p>No employees found</p>
    }
</div>